<!--
    Copyright 2014 the original author or authors.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:camel="http://camel.apache.org/schema/spring"
       xmlns:ctx="http://www.springframework.org/schema/context"
       xmlns:http="http://cxf.apache.org/transports/http/configuration"
       xmlns:sec="http://cxf.apache.org/configuration/security"
       xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://camel.apache.org/schema/spring
http://camel.apache.org/schema/spring/camel-spring.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd
http://cxf.apache.org/transports/http/configuration
http://cxf.apache.org/schemas/configuration/http-conf.xsd
http://cxf.apache.org/configuration/security
http://cxf.apache.org/schemas/configuration/security.xsd">

    <ctx:property-placeholder location="classpath:/client.properties,classpath:/atna-audit.properties"/>

    <import resource="classpath:META-INF/cxf/cxf.xml"/>
    <import resource="classpath:META-INF/cxf/cxf-servlet.xml"/>

    <import resource="atna-context.xml" />

    <!-- Only needed for PDQ continuation -->
    <!--
    <import resource="ehcache-spring.xml" />
    -->

    <camel:camelContext id="clientContext">
        <camel:jmxAgent id="jmxAgent" usePlatformMBeanServer="true" disabled="false"/>
    </camel:camelContext>


    <bean id="client" class="org.openehealth.ipf.tutorials.iheclient.IHEWebServiceClient"/>


    <!-- CXF client side conduit for TLS, cf. https://cxf.apache.org/docs/client-http-transport-including-ssl-support.html -->

    <http:conduit name="*.http-conduit">
        <http:client ConnectionTimeout="10000" ReceiveTimeout="10000"/>

<!--
    <http:tlsClientParameters disableCNCheck="true">
        <sec:keyManagers keyPassword="initinit">
            <sec:keyStore type="JKS" password="initinit"
                          resource="keystore.jks"/>
        </sec:keyManagers>
        <sec:trustManagers>
            <sec:keyStore type="JKS" password="initinit"
                          resource="truststore.jks"/>
        </sec:trustManagers>
        <sec:cipherSuitesFilter>
            <sec:include>.*_EXPORT_.*</sec:include>
            <sec:include>.*_EXPORT1024_.*</sec:include>
            <sec:include>.*_WITH_NULL_.*</sec:include>
            <sec:include>.*_WITH_AES_.*</sec:include>
            <sec:exclude>.*_DH_anon_.*</sec:exclude>
        </sec:cipherSuitesFilter>
    </http:tlsClientParameters>
-->

    </http:conduit>

    <!-- FILE-BASED WS LOGGING -->

    <bean id="adapterLogFileNamePrefix" class="java.lang.String">
        <constructor-arg value="${java.io.tmpdir}/[processId]/[date('yyyyMMdd-HH00')]/[sequenceId]"/>
    </bean>

    <bean id="inLogger" class="org.openehealth.ipf.commons.ihe.ws.cxf.payload.InPayloadLoggerInterceptor">
        <constructor-arg value="#{@adapterLogFileNamePrefix}-in.txt"/>
        <property name="enabled" value="true"/>
    </bean>

    <bean id="outLogger" class="org.openehealth.ipf.commons.ihe.ws.cxf.payload.OutPayloadLoggerInterceptor">
        <constructor-arg value="#{@adapterLogFileNamePrefix}-out.txt"/>
        <property name="enabled" value="true"/>
    </bean>

</beans>